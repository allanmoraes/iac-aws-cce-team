Description: Create Production's Network

Parameters:
  EnvironmentName:
    Description: Environment name
    Type: String
    Default: production

  OwnerTeam:
    Description: Responsible team
    Type: String
    Default: platform

  Project:
    Description: Git repo
    Type: String
    Default: https://github.com/allanmoraes/iac-aws-cce-team/tree/master

  VpcCIDR:
    Description: VPC IP Range
    Type: String
    Default: 10.50.0.0/16

  PublicSubnet1CIDR:
    Description: PublicSubnet AZ-a
    Type: String
    Default: 10.50.10.0/24

  PublicSubnet2CIDR:
    Description: PublicSubnet AZ-b
    Type: String
    Default: 10.50.11.0/24

  PublicSubnet3CIDR:
    Description: PublicSubnet AZ-c
    Type: String
    Default: 10.50.12.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}
        - Key: managedby
          Value: cloudformation
        - Key: owner-team
          Value: !Sub ${OwnerTeam}
        - Key: project
          Value: !Sub ${Project}

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-ng-abc
        - Key: managedby
          Value: cloudformation
        - Key: owner-team
          Value: !Sub ${OwnerTeam}
        - Key: project
          Value: !Sub ${Project}

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-subnet-a
        - Key: scope
          Value: public
        - Key: env
          Value: !Sub ${EnvironmentName}
        - Key: managedby
          Value: cloudformation
        - Key: owner-team
          Value: !Sub ${OwnerTeam}
        - Key: project
          Value: !Sub ${Project}

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-subnet-b
        - Key: scope
          Value: public
        - Key: env
          Value: !Sub ${EnvironmentName}
        - Key: managedby
          Value: cloudformation
        - Key: owner-team
          Value: !Sub ${OwnerTeam}
        - Key: project
          Value: !Sub ${Project}

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet3CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-subnet-c
        - Key: scope
          Value: public
        - Key: env
          Value: !Sub ${EnvironmentName}
        - Key: managedby
          Value: cloudformation
        - Key: owner-team
          Value: !Sub ${OwnerTeam}
        - Key: project
          Value: !Sub ${Project}

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-rt-abc
        - Key: env
          Value: !Sub ${EnvironmentName}
        - Key: scope
          Value: public
        - Key: managedby
          Value: cloudformation
        - Key: owner-team
          Value: !Sub ${OwnerTeam}
        - Key: project
          Value: !Sub ${Project}

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

Outputs:
  VPCId:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: 'Network-VPCId'

  PrimaryCidrBlock:
    Description: A reference to the VPC CidrBlock
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: 'Network-PrimaryCidrBlock'

  PublicSubnet1Id:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: 'Network-PublicSubnet1Id'

  PublicSubnet1CidrBlock:
    Value: !GetAtt PublicSubnet1.CidrBlock
    Export:
      Name: 'Network-PublicSubnet1CidrBlock'

  PublicSubnet2Id:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: 'Network-PublicSubnet2Id'

  PublicSubnet2CidrBlock:
    Value: !GetAtt PublicSubnet2.CidrBlock
    Export:
      Name: 'Network-PublicSubnet2CidrBlock'

  PublicSubnet3Id:
    Description: A reference to the public subnet in the 3rd Availability Zone
    Value: !Ref PublicSubnet3
    Export:
      Name: 'Network-PublicSubnet3Id'

  PublicSubnet3CidrBlock:
    Value: !GetAtt PublicSubnet3.CidrBlock
    Export:
      Name: 'Network-PublicSubnet3CidrBlock'